import { Cargo } from './cargo.model';
import * as moment from 'moment';
import { Currency, InternalState } from '../../core/models/typeCode.model';
export class Operation {
    Id: number;
    OperationSignal: string;
    PurchaseContractId: number;
    SupplyContractId: number;
    PortId: number;
    OperationDate: Date;
    VesselId: number;
    CargoTypeId: number;
    OperationTypeId: number;
    PurchaseMiddleOfficeCode: string;
    SaleMiddleOfficeCode: string;
    CargoId: number;
    PurchaseSaleId: number;
    OperationVolumeM3: number;
    EnergyTW0: number;
    LostAtSeaM3: number;
    LostAtSeaTW0: number;
    CodeAbattement: number;
    LoadingPortId: number;
    InternalStateId: number;
    CurrencyId: number;
    CommoUnitId: number;
    PayementDate: Date;
    PayementDate2: Date;
    CommoFxExposition: number;
    ConstantFxExposition: number;
    CommoExposition: number;
    Amount: number;
    Amount2: number;
    IsBOValidated: number;
    CargoFxHedgeRatio: number;
    CargoResultingFxExposure: number;
    CargoPhysicalFxExposure: number;
    CargoValidatedFxHedgeExposure: number;
    CargoEnCoursFxHedgeExposure: number;
    CargoBrouillonFxHedgeExposure: number;
    CargoFxHedgeExposure: number;
    CargoCommodityHedgeExposure: number;
    CargoValidatedMaturity: Date;
    CargoBrouillonMaturity: Date;
    CargoEnCoursMaturity: Date;
    CargoFxHedgeMaturity: Date;
    HasCargoValidatedMaturityConflict: boolean;
    HasCargoEnCoursMaturityConflict: boolean;
    HasCargoBrouillonMaturityConflict: boolean;
    ContractPhysicalExposure: number;
    ContractValidatedAmount: number;
    ContractBrouillonAmount: number;
    ContractEnCoursAmount: number;
    ContractFxExposure: number;
    ContractAvailableFxHedgeBrouillonAmount: number;
    ContractAvailableFxHedgeEnCoursAmount: number;
    ContractAvailableFxHedgeValidatedAmount: number;
    ContractAvailableFxHedge: number;
    ContractCommodityHedgeExposure: number;
    ContractFxHedgeRatio: number;
    ContractResultingFxExposure: number;
    ContractValidatedMaturity: Date;
    ContractBrouillonMaturity: Date;
    ContractEnCoursMaturity: Date;
    ContractAvailableFxMaturity: Date;
    HasContractValidatedMaturityConflict: boolean;
    HasContractEnCoursMaturityConflict: boolean;
    HasContractBrouillonMaturityConflict: boolean;
    CargoFxHedgeRatioIsError: boolean;
    ContractFxHedgeRatioIsError: boolean;
    ContractAvailableMaturityInConflictCase: Date;
    CreationUser: string;
    ModificationUser: string;
    CreationDate: Date;
    ModificationDate: Date;
    Cargo: Cargo;
    //CargoType: CargoType;
    //CommodityHedges: ICollection<CommodityHedge>;
    Currency: Currency;
    //HedgeLegs: List<HedgeLeg>;
    //OperationType: OperationType;
    //Port: Port;
    //Port1: Port;
    //PurchaseContract: PurchaseContract;
    //PurchaseSale: PurchaseSale;
    //SupplyContract: SupplyContract;
    //Vessel: Vessel;
    InternalState: InternalState;

    public constructor() {
        this.Id = 0;
        this.OperationSignal = "";
        this.CreationDate = moment().toDate();
    }  
}